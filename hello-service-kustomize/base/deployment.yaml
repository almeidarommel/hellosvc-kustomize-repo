apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: hello-service
    group: com.redhat.sample
    provider: jkube
    version: 0.0.1-SNAPSHOT
  name: hello-service
  namespace: teste
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    app: hello-service
    group: com.redhat.sample
    provider: jkube
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 3600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        app.openshift.io/vcs-ref: development
        app.openshift.io/vcs-uri: https://github.com/rafamqrs/demo-pipeline-tkn.git
        jkube.io/git-branch: development
        jkube.io/git-commit: d892b932ca128048b302c5d731b28e9687620239
        jkube.io/git-url: https://github.com/rafamqrs/demo-pipeline-tkn.git
        jkube.io/scm-tag: HEAD
        jkube.io/scm-url: https://github.com/spring-projects/spring-boot/hello-service
      creationTimestamp: null
      labels:
        app: hello-service
        group: com.redhat.sample
        provider: jkube
        version: 0.0.1-SNAPSHOT
      name: hello-service
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: image-registry.openshift-image-registry.svc:5000/teste/hello-service@sha256:4902e39150b08950ebc00d4ca3b772511b9d5100bfa33ec40fbbf090818fd60a
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 180
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: spring-boot
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9779
          name: prometheus
          protocol: TCP
        - containerPort: 8778
          name: jolokia
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - spring-boot
      from:
        kind: ImageStreamTag
        name: hello-service:latest
        namespace: teste
    type: ImageChange