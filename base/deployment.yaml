apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    app.openshift.io/vcs-ref: development
    app.openshift.io/vcs-uri: https://github.com/rafamqrs/demo-pipeline-tkn.git
    jkube.io/git-branch: development
    jkube.io/git-commit: d892b932ca128048b302c5d731b28e9687620239
    jkube.io/git-url: https://github.com/rafamqrs/demo-pipeline-tkn.git
    jkube.io/scm-tag: HEAD
    jkube.io/scm-url: https://github.com/spring-projects/spring-boot/hello-service
  creationTimestamp: "2022-06-13T20:34:47Z"
  generation: 4
  labels:
    app: hello-service
    group: com.redhat.sample
    provider: jkube
    version: 0.0.1-SNAPSHOT
  managedFields:
  - apiVersion: apps.openshift.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:app.openshift.io/vcs-ref: {}
          f:app.openshift.io/vcs-uri: {}
          f:jkube.io/git-branch: {}
          f:jkube.io/git-commit: {}
          f:jkube.io/git-url: {}
          f:jkube.io/scm-tag: {}
          f:jkube.io/scm-url: {}
        f:labels:
          .: {}
          f:app: {}
          f:group: {}
          f:provider: {}
          f:version: {}
      f:spec:
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector:
          .: {}
          f:app: {}
          f:group: {}
          f:provider: {}
        f:strategy:
          f:activeDeadlineSeconds: {}
          f:rollingParams:
            .: {}
            f:intervalSeconds: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
            f:timeoutSeconds: {}
            f:updatePeriodSeconds: {}
          f:type: {}
        f:template:
          .: {}
          f:metadata:
            .: {}
            f:annotations:
              .: {}
              f:app.openshift.io/vcs-ref: {}
              f:app.openshift.io/vcs-uri: {}
              f:jkube.io/git-branch: {}
              f:jkube.io/git-commit: {}
              f:jkube.io/git-url: {}
              f:jkube.io/scm-tag: {}
              f:jkube.io/scm-url: {}
            f:creationTimestamp: {}
            f:labels:
              .: {}
              f:app: {}
              f:group: {}
              f:provider: {}
              f:version: {}
            f:name: {}
          f:spec:
            .: {}
            f:containers:
              .: {}
              k:{"name":"spring-boot"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"KUBERNETES_NAMESPACE"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef:
                        .: {}
                        f:apiVersion: {}
                        f:fieldPath: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:livenessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":8080,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":8778,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":9779,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:resources: {}
                f:securityContext:
                  .: {}
                  f:privileged: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
        f:triggers: {}
      f:status:
        f:latestVersion: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: okhttp
    operation: Update
    time: "2022-06-13T20:37:47Z"
  - apiVersion: apps.openshift.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:availableReplicas: {}
        f:conditions:
          k:{"type":"Available"}:
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:status: {}
          k:{"type":"Progressing"}:
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:unavailableReplicas: {}
    manager: openshift-controller-manager
    operation: Update
    time: "2022-06-13T20:38:07Z"
  name: hello-service
  namespace: teste
  resourceVersion: "5397646"
  uid: e7966a60-fd32-46c3-a7c2-3ec82e705e02
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    app: hello-service
    group: com.redhat.sample
    provider: jkube
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 3600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        app.openshift.io/vcs-ref: development
        app.openshift.io/vcs-uri: https://github.com/rafamqrs/demo-pipeline-tkn.git
        jkube.io/git-branch: development
        jkube.io/git-commit: d892b932ca128048b302c5d731b28e9687620239
        jkube.io/git-url: https://github.com/rafamqrs/demo-pipeline-tkn.git
        jkube.io/scm-tag: HEAD
        jkube.io/scm-url: https://github.com/spring-projects/spring-boot/hello-service
      creationTimestamp: null
      labels:
        app: hello-service
        group: com.redhat.sample
        provider: jkube
        version: 0.0.1-SNAPSHOT
      name: hello-service
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: image-registry.openshift-image-registry.svc:5000/teste/hello-service@sha256:4902e39150b08950ebc00d4ca3b772511b9d5100bfa33ec40fbbf090818fd60a
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 180
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: spring-boot
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9779
          name: prometheus
          protocol: TCP
        - containerPort: 8778
          name: jolokia
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - spring-boot
      from:
        kind: ImageStreamTag
        name: hello-service:latest
        namespace: teste
    type: ImageChange
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2022-06-13T20:38:07Z"
    lastUpdateTime: "2022-06-13T20:38:07Z"
    message: Deployment config has minimum availability.
    status: "True"
    type: Available
  - lastTransitionTime: "2022-06-13T20:37:46Z"
    lastUpdateTime: "2022-06-13T20:38:07Z"
    message: replication controller "hello-service-2" successfully rolled out
    reason: NewReplicationControllerAvailable
    status: "True"
    type: Progressing
  details:
    causes:
    - imageTrigger:
        from:
          kind: DockerImage
          name: image-registry.openshift-image-registry.svc:5000/teste/hello-service@sha256:4902e39150b08950ebc00d4ca3b772511b9d5100bfa33ec40fbbf090818fd60a
      type: ImageChange
    message: image change
  latestVersion: 2
  observedGeneration: 4
  readyReplicas: 1
  replicas: 1
  unavailableReplicas: 0
  updatedReplicas: 1
